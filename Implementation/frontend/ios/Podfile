# Resolve react_native_pods.rb with node to allow for hoisting
#require Pod::Executable.execute_command('node', ['-p',
#  'require.resolve(
#    "react-native/scripts/react_native_pods.rb",
#    {paths: [process.argv[1]]},
#  )', __dir__]).strip

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '16.0'  # Ensure minimum iOS version for compatibility
prepare_react_native_project!

# ⬇️ uncomment the permissions you need
setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  # 'Camera',
  # 'Contacts',
  # 'FaceID',
   'LocationAccuracy',
   'LocationAlways',
   'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  # 'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])

# ✅ Load environment variables from .env
require 'dotenv'
Dotenv.load(File.join(__dir__, '..', '.env'))


# ✅ Firebase Dependencies
pod 'Firebase', :modular_headers => true
pod 'FirebaseCoreInternal', :modular_headers => true  
pod 'GoogleUtilities', :modular_headers => true
pod 'FirebaseAppCheckInterop', :modular_headers => true
pod 'FirebaseCore', :modular_headers => true
pod 'leveldb-library', :modular_headers => true
pod 'FirebaseDatabase', :modular_headers => true

# ✅ Google Maps SDK (Latest Version)
pod 'GoogleMaps', '~> 7.0.0'
pod 'Google-Maps-iOS-Utils', :modular_headers => true  # Optional for clustering & utilities

# ✅ Ensure Framework Linking is Handled Properly
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => :dynamic
end

target 'frontend' do
  # use_native_modules!

  config = use_native_modules!

use_react_native!(
  :path => config[:reactNativePath],
  :app_path => "#{Pod::Config.instance.installation_root}/.."
)


  # ✅ Ensure Permissions Pods are Installed
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'


  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

    # ✅ Fix: Ensure frameworks build correctly for both iOS Devices & Simulators
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # ✅ Fix for Apple Silicon & iOS Simulator (Excludes arm64)
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        
        # ✅ Inject Google Maps API Key into Build Settings
        if ENV['GOOGLE_MAPS_API_KEY']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', "GOOGLE_MAPS_API_KEY=#{ENV['GOOGLE_MAPS_API_KEY']}"]
        end
      end
    end
  end
end
